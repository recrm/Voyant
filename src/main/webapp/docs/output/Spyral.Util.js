Ext.data.JsonP.Spyral_Util({"tagname":"class","name":"Spyral.Util","autodetected":{},"files":[{"filename":"spyral.js","href":null}],"members":[{"name":"blobToDataUrl","tagname":"method","owner":"Spyral.Util","id":"static-method-blobToDataUrl","meta":{"static":true}},{"name":"blobToString","tagname":"method","owner":"Spyral.Util","id":"static-method-blobToString","meta":{"static":true}},{"name":"dataUrlToBlob","tagname":"method","owner":"Spyral.Util","id":"static-method-dataUrlToBlob","meta":{"static":true}},{"name":"getFileExtensionFromMimeType","tagname":"method","owner":"Spyral.Util","id":"static-method-getFileExtensionFromMimeType","meta":{"static":true}},{"name":"id","tagname":"method","owner":"Spyral.Util","id":"static-method-id","meta":{"static":true}},{"name":"isArray","tagname":"method","owner":"Spyral.Util","id":"static-method-isArray","meta":{"static":true}},{"name":"isBlob","tagname":"method","owner":"Spyral.Util","id":"static-method-isBlob","meta":{"static":true}},{"name":"isBoolean","tagname":"method","owner":"Spyral.Util","id":"static-method-isBoolean","meta":{"static":true}},{"name":"isFunction","tagname":"method","owner":"Spyral.Util","id":"static-method-isFunction","meta":{"static":true}},{"name":"isNode","tagname":"method","owner":"Spyral.Util","id":"static-method-isNode","meta":{"static":true}},{"name":"isNull","tagname":"method","owner":"Spyral.Util","id":"static-method-isNull","meta":{"static":true}},{"name":"isNumber","tagname":"method","owner":"Spyral.Util","id":"static-method-isNumber","meta":{"static":true}},{"name":"isObject","tagname":"method","owner":"Spyral.Util","id":"static-method-isObject","meta":{"static":true}},{"name":"isPromise","tagname":"method","owner":"Spyral.Util","id":"static-method-isPromise","meta":{"static":true}},{"name":"isString","tagname":"method","owner":"Spyral.Util","id":"static-method-isString","meta":{"static":true}},{"name":"isUndefined","tagname":"method","owner":"Spyral.Util","id":"static-method-isUndefined","meta":{"static":true}},{"name":"more","tagname":"method","owner":"Spyral.Util","id":"static-method-more","meta":{"static":true}},{"name":"show","tagname":"method","owner":"Spyral.Util","id":"static-method-show","meta":{"static":true}},{"name":"showError","tagname":"method","owner":"Spyral.Util","id":"static-method-showError","meta":{"static":true}},{"name":"toString","tagname":"method","owner":"Spyral.Util","id":"static-method-toString","meta":{"static":true}},{"name":"transformXml","tagname":"method","owner":"Spyral.Util","id":"static-method-transformXml","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-Spyral.Util","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'><p>A helper for working with the Voyant Notebook app.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-blobToDataUrl' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-blobToDataUrl' class='name expandable'>blobToDataUrl</a>( <span class='pre'>blob</span> ) : Promise&lt;String&gt;<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Take a Blob and convert it to a data URL. ...</div><div class='long'><p>Take a Blob and convert it to a data URL.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>blob</span> : Blob<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise&lt;String&gt;</span><div class='sub-desc'><p>a Promise for a data URL</p>\n</div></li></ul></div></div></div><div id='static-method-blobToString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-blobToString' class='name expandable'>blobToString</a>( <span class='pre'>blob</span> ) : Promise&lt;String&gt;<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Take a Blob and convert it to a String. ...</div><div class='long'><p>Take a Blob and convert it to a String.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>blob</span> : Blob<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise&lt;String&gt;</span><div class='sub-desc'><p>a Promise for a String</p>\n</div></li></ul></div></div></div><div id='static-method-dataUrlToBlob' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-dataUrlToBlob' class='name expandable'>dataUrlToBlob</a>( <span class='pre'>dataUrl</span> ) : Blob<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Take a data URL and convert it to a Blob. ...</div><div class='long'><p>Take a data URL and convert it to a Blob.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dataUrl</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Blob</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-getFileExtensionFromMimeType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-getFileExtensionFromMimeType' class='name expandable'>getFileExtensionFromMimeType</a>( <span class='pre'>mimeType</span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Takes a MIME type and returns the related file extension. ...</div><div class='long'><p>Takes a MIME type and returns the related file extension.\nOnly handles file types supported by Voyant.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mimeType</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-id' class='name expandable'>id</a>( <span class='pre'>len</span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Generates a random ID of the specified length. ...</div><div class='long'><p>Generates a random ID of the specified length.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>The length of the ID to generate?</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-isArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-isArray' class='name expandable'>isArray</a>( <span class='pre'>val</span> ) : Boolean<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns true if the value is an Array. ...</div><div class='long'><p>Returns true if the value is an Array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-isBlob' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-isBlob' class='name expandable'>isBlob</a>( <span class='pre'>val</span> ) : Boolean<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns true if the value is a Blob. ...</div><div class='long'><p>Returns true if the value is a Blob.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-isBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-isBoolean' class='name expandable'>isBoolean</a>( <span class='pre'>val</span> ) : Boolean<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns true if the value is a Boolean. ...</div><div class='long'><p>Returns true if the value is a Boolean.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-isFunction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-isFunction' class='name expandable'>isFunction</a>( <span class='pre'>val</span> ) : Boolean<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns true if the value is a Function. ...</div><div class='long'><p>Returns true if the value is a Function.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-isNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-isNode' class='name expandable'>isNode</a>( <span class='pre'>val</span> ) : Boolean<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns true if the value is a Node. ...</div><div class='long'><p>Returns true if the value is a Node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-isNull' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-isNull' class='name expandable'>isNull</a>( <span class='pre'>val</span> ) : Boolean<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns true if the value is Null. ...</div><div class='long'><p>Returns true if the value is Null.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-isNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-isNumber' class='name expandable'>isNumber</a>( <span class='pre'>val</span> ) : Boolean<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns true if the value is a Number. ...</div><div class='long'><p>Returns true if the value is a Number.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-isObject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-isObject' class='name expandable'>isObject</a>( <span class='pre'>val</span> ) : Boolean<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns true if the value is an Object. ...</div><div class='long'><p>Returns true if the value is an Object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-isPromise' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-isPromise' class='name expandable'>isPromise</a>( <span class='pre'>val</span> ) : Boolean<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns true if the value is a Promise. ...</div><div class='long'><p>Returns true if the value is a Promise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-isString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-isString' class='name expandable'>isString</a>( <span class='pre'>val</span> ) : Boolean<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns true if the value is a String. ...</div><div class='long'><p>Returns true if the value is a String.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-isUndefined' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-isUndefined' class='name expandable'>isUndefined</a>( <span class='pre'>val</span> ) : Boolean<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns true if the value is Undefined. ...</div><div class='long'><p>Returns true if the value is Undefined.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-more' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-more' class='name expandable'>more</a>( <span class='pre'>before, more, after</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>before</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>more</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>after</span> : String<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-show' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-show' class='name expandable'>show</a>( <span class='pre'>contents, len, mode</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Show contents in the results area. ...</div><div class='long'><p>Show contents in the results area.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>contents</span> : *<div class='sub-desc'>\n</div></li><li><span class='pre'>len</span> : *<div class='sub-desc'>\n</div></li><li><span class='pre'>mode</span> : *<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-showError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-showError' class='name expandable'>showError</a>( <span class='pre'>error, more</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Show an error in the results area. ...</div><div class='long'><p>Show an error in the results area.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>error</span> : *<div class='sub-desc'>\n</div></li><li><span class='pre'>more</span> : *<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-toString' class='name expandable'>toString</a>( <span class='pre'>contents</span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>contents</span> : Array|Object|String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-transformXml' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Spyral.Util'>Spyral.Util</span><br/></div><a href='#!/api/Spyral.Util-static-method-transformXml' class='name expandable'>transformXml</a>( <span class='pre'>xmlDoc, xslStylesheet, [returnDoc]</span> ) : Document<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Takes an XML document and XSL stylesheet and returns the resulting transformation. ...</div><div class='long'><p>Takes an XML document and XSL stylesheet and returns the resulting transformation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xmlDoc</span> : (Document|String)<div class='sub-desc'><p>The XML document to transform</p>\n</div></li><li><span class='pre'>xslStylesheet</span> : (Document|String)<div class='sub-desc'><p>The XSL to use for the transformation</p>\n</div></li><li><span class='pre'>returnDoc</span> : Boolean (optional)<div class='sub-desc'><p>True to return a Document, false to return a DocumentFragment</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Document</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});