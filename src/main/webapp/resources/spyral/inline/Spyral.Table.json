{
  "typedefs": [
    {
      "name": "TableConfig",
      "type": "typedef",
      "memberof": "Spyral.Table",
      "props": [
        {
          "name": "format",
          "type": [
            "string"
          ],
          "desc": "<p>The format of the provided data, either \"tsv\" or \"csv\"</p>"
        },
        {
          "name": "headers",
          "type": [
            "Object",
            "Array"
          ],
          "desc": "<p>The table headers</p>"
        },
        {
          "name": "hasHeaders",
          "type": [
            "boolean"
          ],
          "desc": "<p>True if the headers are the first item in the data</p>"
        },
        {
          "name": "count",
          "type": [
            "string"
          ],
          "desc": "<p>Specify \"vertical\" or \"horizontal\" to create a table of unique item counts in the provided data</p>"
        }
      ]
    }
  ],
  "overview": "<p>The Spyral.Table class in Spyral provides convenience functions for working with tabular\ndata.</p>\n<p>There are several ways of initializing a Table, here are some of them:</p>\n<p>Provide an array of data with 3 rows:</p>\n<pre><code> let table = createTable([1,2,3]);\n</code></pre>\n<p>Provide a nested array of data with multiple rows:</p>\n<pre><code>    let table = createTable([[1,2],[3,4]]);\n</code></pre>\n<p>Same nested array, but with a second argument specifying headers</p>\n<pre><code>    let table = createTable([[1,2],[3,4]], {headers: [\"one\",\"two\"]});\n</code></pre>\n<p>Create table with comma-separated values:</p>\n<pre><code> let table = createTable(\"one,two\\\\n1,2\\\\n3,4\");\n</code></pre>\n<p>Create table with tab-separated values</p>\n<pre><code>    let table = createTable(\"one\\\\ttwo\\\\n1\\\\t2\\\\n3\\\\t4\");\n</code></pre>\n<p>Create table with array of objects</p>\n<pre><code> let table = createTable([{one:1,two:2},{one:3,two:4}]);\n</code></pre>\n<p>It's also possible simple to create a sorted frequency table from an array of values:</p>\n<pre><code>    let table = createTable([\"one\",\"two\",\"one\"], {count: \"vertical\", headers: [\"Term\",\"Count\"]})\n</code></pre>\n<p>Working with a Corpus is easy. For instance, we can create a table from the top terms:</p>\n<pre><code>    loadCorpus(\"austen\").terms({limit:500, stopList: 'auto'}).then(terms =&gt; {\n        return createTable(terms);\n    })\n</code></pre>\n<p>Similarly, we could create a frequency table from the first 1,000 words of the corpus:</p>\n<pre><code>    loadCorpus(\"austen\").words({limit:1000, docIndex: 0, stopList: 'auto'}).then(words =&gt; {\n        return createTable(words, {count: \"vertical\"});\n    });\n</code></pre>\n<p>Some of the configuration options are as follows:</p>\n<ul>\n<li><strong>format</strong>: especially for forcing csv or tsv when the data is a string</li>\n<li><strong>hasHeaders</strong>: determines if data has a header row (usually determined automatically)</li>\n<li><strong>headers</strong>: a Array of Strings that serve as headers for the table</li>\n<li><strong>count</strong>: forces Spyral to create a sorted frequency table from an Array of data, this can be set to \"vertical\" if the counts are shown vertically or set to true if the counts are shown horizontally</li>\n</ul>\n<p>Tables are convenient in Spyral because you can simply show them to preview a version in HTML.</p>",
  "members": [
    {
      "name": "constructor",
      "type": "constructor",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Object",
            "Array",
            "String",
            "Number"
          ],
          "desc": "<p>An array of data or a string with CSV or TSV.</p>"
        },
        {
          "name": "config",
          "type": [
            "Spyral.Table~TableConfig"
          ],
          "desc": "<p>an Object for configuring the table initialization</p>"
        }
      ],
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>Create a new Table</p>"
    },
    {
      "name": "setHeaders",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Object",
            "Array"
          ]
        }
      ],
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>Set the headers for the Table</p>"
    },
    {
      "name": "addRows",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Array"
          ]
        }
      ],
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>Add rows to the Table</p>"
    },
    {
      "name": "addRow",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Array",
            "Object"
          ]
        }
      ],
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>Add a row to the Table</p>"
    },
    {
      "name": "setRow",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ],
          "desc": "<p>The row index</p>"
        },
        {
          "name": "data",
          "type": [
            "Object",
            "Array"
          ]
        },
        {
          "name": "create",
          "type": [
            "boolean"
          ]
        }
      ],
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>Set a row</p>"
    },
    {
      "name": "setColumn",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ],
          "desc": "<p>The column index</p>"
        },
        {
          "name": "data",
          "type": [
            "Object",
            "Array"
          ]
        },
        {
          "name": "create",
          "type": [
            "boolean"
          ]
        }
      ],
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>Set a column</p>"
    },
    {
      "name": "updateCell",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "row",
          "type": [
            "number",
            "string"
          ],
          "desc": "<p>The row index</p>"
        },
        {
          "name": "column",
          "type": [
            "number",
            "string"
          ],
          "desc": "<p>The column index</p>"
        },
        {
          "name": "value",
          "type": [
            "number"
          ],
          "desc": "<p>The value to set/add</p>"
        },
        {
          "name": "overwrite",
          "type": [
            "boolean"
          ],
          "desc": "<p>True to set, false to add to current value</p>"
        }
      ],
      "desc": "<p>Add to or set a cell value</p>"
    },
    {
      "name": "cell",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "rowInd",
          "type": [
            "number",
            "string"
          ],
          "desc": "<p>The row index</p>"
        },
        {
          "name": "colInd",
          "type": [
            "number",
            "string"
          ],
          "desc": "<p>The column index</p>"
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the value of a cell</p>"
    },
    {
      "name": "setCell",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "row",
          "type": [
            "number",
            "string"
          ],
          "desc": "<p>The row index</p>"
        },
        {
          "name": "column",
          "type": [
            "number",
            "string"
          ],
          "desc": "<p>The column index</p>"
        },
        {
          "name": "value",
          "type": [
            "number"
          ],
          "desc": "<p>The value to set</p>"
        }
      ],
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>Set the value of a cell</p>"
    },
    {
      "name": "getRowIndex",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ],
          "desc": "<p>The index</p>"
        },
        {
          "name": "create",
          "type": [
            "boolean"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get (and create) the row index</p>"
    },
    {
      "name": "getColumnIndex",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ],
          "desc": "<p>The index</p>"
        },
        {
          "name": "create",
          "type": [
            "boolean"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get (and create) the column index</p>"
    },
    {
      "name": "addColumn",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "config",
          "type": [
            "Object",
            "String"
          ]
        },
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>Add a column (at the specified index)</p>"
    },
    {
      "name": "rows",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "inds",
          "type": [
            "Boolean",
            "Array",
            "Number",
            "String"
          ],
          "opt": true
        },
        {
          "name": "config",
          "type": [
            "Object",
            "Number",
            "String"
          ],
          "opt": true
        }
      ],
      "returns": {
        "type": [
          "Number",
          "Array"
        ]
      },
      "desc": "<p>This function returns different values depending on the arguments provided.\nWhen there are no arguments, it returns the number of rows in this table.\nWhen the first argument is the boolean value <code>true</code> all rows are returned.\nWhen the first argument is a an array then the rows corresponding to the row\nindices or names are returned. When all arguments except are numbers or strings\nthen each of those is returned.</p>"
    },
    {
      "name": "row",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        },
        {
          "name": "asObj",
          "type": [
            "boolean"
          ],
          "opt": true
        }
      ],
      "returns": {
        "type": [
          "Object",
          "Number",
          "String"
        ]
      },
      "desc": "<p>Get the specified row</p>"
    },
    {
      "name": "columns",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "inds",
          "type": [
            "Boolean",
            "Array",
            "Number",
            "String"
          ],
          "opt": true
        },
        {
          "name": "config",
          "type": [
            "Object",
            "Number",
            "String"
          ],
          "opt": true
        }
      ],
      "returns": {
        "type": [
          "Number",
          "Array"
        ]
      },
      "desc": "<p>This function returns different values depending on the arguments provided.\nWhen there are no arguments, it returns the number of columns in this table.\nWhen the first argument is the boolean value <code>true</code> all columns are returned.\nWhen the first argument is a number a slice of the columns is returned and if\nthe second argument is a number it is treated as the length of the slice to\nreturn (note that it isn't the <code>end</code> index like with Array.slice()).</p>"
    },
    {
      "name": "column",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        },
        {
          "name": "asObj",
          "type": [
            "boolean"
          ],
          "opt": true
        }
      ],
      "returns": {
        "type": [
          "Object",
          "Number",
          "String"
        ]
      },
      "desc": "<p>Get the specified column</p>"
    },
    {
      "name": "header",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number",
          "string"
        ]
      },
      "desc": "<p>Get the specified header</p>"
    },
    {
      "name": "headers",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "inds",
          "type": [
            "Boolean",
            "Array",
            "Number",
            "String"
          ]
        }
      ],
      "returns": {
        "type": [
          "Number",
          "Array"
        ]
      },
      "desc": "<p>This function returns different values depending on the arguments provided.\nWhen there are no arguments, it returns the number of headers in this table.\nWhen the first argument is the boolean value <code>true</code> all headers are returned.\nWhen the first argument is a number a slice of the headers is returned.\nWhen the first argument is an array the slices specified in the array are returned.</p>"
    },
    {
      "name": "hasColumn",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number",
          "string"
        ]
      },
      "desc": "<p>Does the specified column exist</p>"
    },
    {
      "name": "forEach",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "fn",
          "type": [
            "function"
          ]
        }
      ],
      "desc": "<p>Runs the specified function on each row.\nThe function is passed the row and the row index.</p>"
    },
    {
      "name": "rowMin",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the minimum value in the specified row</p>"
    },
    {
      "name": "rowMax",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the maximum value in the specified row</p>"
    },
    {
      "name": "columnMin",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the minimum value in the specified column</p>"
    },
    {
      "name": "columnMax",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the maximum value in the specified column</p>"
    },
    {
      "name": "rowSum",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the sum of the values in the specified row</p>"
    },
    {
      "name": "columnSum",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the sum of the values in the specified column</p>"
    },
    {
      "name": "rowMean",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the mean of the values in the specified row</p>"
    },
    {
      "name": "columnMean",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the mean of the values in the specified column</p>"
    },
    {
      "name": "rowCounts",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the count of each unique value in the specified row</p>"
    },
    {
      "name": "columnCounts",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the count of each unique value in the specified column</p>"
    },
    {
      "name": "rowRollingMean",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        },
        {
          "name": "neighbors",
          "type": [
            "number"
          ]
        },
        {
          "name": "overwrite",
          "type": [
            "boolean"
          ]
        }
      ],
      "returns": {
        "type": [
          "Array"
        ]
      },
      "desc": "<p>Get the rolling mean for the specified row</p>"
    },
    {
      "name": "columnRollingMean",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        },
        {
          "name": "neighbors",
          "type": [
            "number"
          ]
        },
        {
          "name": "overwrite",
          "type": [
            "boolean"
          ]
        }
      ],
      "returns": {
        "type": [
          "Array"
        ]
      },
      "desc": "<p>Get the rolling mean for the specified column</p>"
    },
    {
      "name": "rowVariance",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the variance for the specified row</p>"
    },
    {
      "name": "columnVariance",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the variance for the specified column</p>"
    },
    {
      "name": "rowStandardDeviation",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the standard deviation for the specified row</p>"
    },
    {
      "name": "columnStandardDeviation",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the standard deviation for the specified column</p>"
    },
    {
      "name": "rowZScores",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "Array"
        ]
      },
      "desc": "<p>Get the z scores for the specified row</p>"
    },
    {
      "name": "columnZScores",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "ind",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "Array"
        ]
      },
      "desc": "<p>Get the z scores for the specified column</p>"
    },
    {
      "name": "rowSort",
      "type": "function",
      "memberof": "Spyral.Table",
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>TODO\nSort the specified rows</p>"
    },
    {
      "name": "columnSort",
      "type": "function",
      "memberof": "Spyral.Table",
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>TODO\nSort the specified columns</p>"
    },
    {
      "name": "toCsv",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "config",
          "type": [
            "Object"
          ],
          "opt": true
        }
      ],
      "returns": {
        "type": [
          "string"
        ]
      },
      "desc": "<p>Get a CSV representation of the Table</p>"
    },
    {
      "name": "toTsv",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "config",
          "type": [
            "Object"
          ],
          "opt": true
        }
      ],
      "returns": {
        "type": [
          "string"
        ]
      },
      "desc": "<p>Get a TSV representation of the Table</p>"
    },
    {
      "name": "html",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "target",
          "type": [
            "function",
            "String",
            "Object"
          ]
        },
        {
          "name": "config",
          "type": [
            "Object"
          ],
          "opt": true
        }
      ],
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>Set the target's contents to an HTML representation of the Table</p>"
    },
    {
      "name": "toHtml",
      "type": "function",
      "memberof": "Spyral.Table",
      "desc": "<p>Same as toString.</p>"
    },
    {
      "name": "toString",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "config",
          "type": [
            "Object"
          ],
          "opt": true
        }
      ],
      "returns": {
        "type": [
          "string"
        ]
      },
      "desc": "<p>Get an HTML representation of the Table</p>"
    },
    {
      "name": "chart",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "target",
          "type": [
            "String",
            "HTMLElement"
          ],
          "opt": true
        },
        {
          "name": "config",
          "type": [
            "HighchartsConfig"
          ],
          "opt": true
        }
      ],
      "returns": {
        "type": [
          "Highcharts.Chart"
        ]
      },
      "desc": "<p>Show a chart representing the Table</p>"
    },
    {
      "name": "create",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Object",
            "Array",
            "String",
            "Number"
          ]
        },
        {
          "name": "config",
          "type": [
            "TableConfig"
          ]
        }
      ],
      "returns": {
        "type": [
          "Spyral.Table"
        ]
      },
      "desc": "<p>Create a new Table</p>",
      "static": true
    },
    {
      "name": "fetch",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "input",
          "type": [
            "String",
            "Request"
          ]
        },
        {
          "name": "api",
          "type": [
            "Object"
          ]
        },
        {
          "name": "config",
          "type": [
            "Object"
          ]
        }
      ],
      "returns": {
        "type": [
          "Promise"
        ]
      },
      "desc": "<p>Fetch a Table from a source</p>",
      "static": true
    },
    {
      "name": "counts",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Array"
          ]
        }
      ],
      "returns": {
        "type": [
          "Object"
        ]
      },
      "desc": "<p>Get the count of each unique value in the data</p>",
      "static": true
    },
    {
      "name": "cmp",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "a",
          "type": [
            "number",
            "string"
          ]
        },
        {
          "name": "b",
          "type": [
            "number",
            "string"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Compare two values</p>",
      "static": true
    },
    {
      "name": "sum",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Array"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the sum of the provided values</p>",
      "static": true
    },
    {
      "name": "mean",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Array"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the mean of the provided values</p>",
      "static": true
    },
    {
      "name": "rollingMean",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Array"
          ]
        },
        {
          "name": "neighbors",
          "type": [
            "number"
          ]
        }
      ],
      "returns": {
        "type": [
          "Array"
        ]
      },
      "desc": "<p>Get rolling mean for the provided values</p>",
      "static": true
    },
    {
      "name": "variance",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Array"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the variance for the provided values</p>",
      "static": true
    },
    {
      "name": "standardDeviation",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Array"
          ]
        }
      ],
      "returns": {
        "type": [
          "number"
        ]
      },
      "desc": "<p>Get the standard deviation for the provided values</p>",
      "static": true
    },
    {
      "name": "zScores",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Array"
          ]
        }
      ],
      "returns": {
        "type": [
          "Array"
        ]
      },
      "desc": "<p>Get the z scores for the provided values</p>",
      "static": true
    },
    {
      "name": "zip",
      "type": "function",
      "memberof": "Spyral.Table",
      "params": [
        {
          "name": "data",
          "type": [
            "Array"
          ]
        }
      ],
      "returns": {
        "type": [
          "Array"
        ]
      },
      "desc": "<p>Perform a zip operation of the provided arrays. Learn more about zip on <a href=\"https://en.wikipedia.org/wiki/Convolution_%28computer_science%29\">Wikipedia</a>.</p>",
      "static": true
    }
  ]
}